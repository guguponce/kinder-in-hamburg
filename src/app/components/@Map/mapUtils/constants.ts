import { haversineDistance } from "@app/utils/functions";
import { divIcon } from "leaflet";
import {
  createNormalSizeIcon,
  createStandortMapIcon,
  createWeihnachtsmarktMapIcon,
} from "../functions";

export const locations: { [key: string]: { lat: number; lon: number } } = {
  "Hamburg-Altstadt": {
    lat: 53.55,
    lon: 10,
  },
  HafenCity: {
    lat: 53.54112413984575,
    lon: 9.995157817329977,
  },
  Neustadt: {
    lat: 53.54907913132533,
    lon: 9.978847503662111,
  },
  "St. Pauli": {
    lat: 53.553464430920364,
    lon: 9.960307542910321,
  },
  "St. Georg": {
    lat: 53.55513,
    lon: 10.01231,
  },
  Hammerbrook: {
    lat: 53.5456114467716,
    lon: 10.025219928604418,
  },
  Borgfelde: {
    lat: 53.55475,
    lon: 10.03447,
  },
  Hamm: {
    lat: 53.55203984008464,
    lon: 10.052977818401875,
  },
  Horn: {
    lat: 53.553464505147076,
    lon: 10.08836772817865,
  },
  Billstedt: {
    lat: 53.547958906700664,
    lon: 10.121658596429192,
  },
  Billbrook: {
    lat: 53.526634968161176,
    lon: 10.086135332216962,
  },
  Rothenburgsort: {
    lat: 53.53398223722513,
    lon: 10.040472164518752,
  },
  Veddel: {
    lat: 53.52398972065751,
    lon: 10.021408440962036,
  },
  Wilhelmsburg: {
    lat: 53.49213367667066,
    lon: 9.996187253550843,
  },
  "Kleiner Grasbrook": {
    lat: 53.527250181982126,
    lon: 9.996354924621393,
  },
  Steinwerder: {
    lat: 53.53826771642419,
    lon: 9.959787947758736,
  },
  Waltershof: {
    lat: 53.519491141453265,
    lon: 9.910011291503908,
  },
  Finkenwerder: {
    lat: 53.52909418684849,
    lon: 9.858482729436219,
  },
  "Altona-Altstadt": {
    lat: 53.549690657771606,
    lon: 9.943829646845376,
  },
  Sternschanze: {
    lat: 53.56192805100421,
    lon: 9.964943907537142,
  },
  "Altona-Nord": {
    lat: 53.56090796741301,
    lon: 9.943486678785384,
  },
  Ottensen: {
    lat: 53.5512,
    lon: 9.9227,
  },
  Bahrenfeld: {
    lat: 53.56875844835114,
    lon: 9.905033377592714,
  },
  "Groß Flottbek": {
    lat: 53.56559796661771,
    lon: 9.879970727884048,
  },
  Othmarschen: {
    lat: 53.55356877040356,
    lon: 9.8863168784228,
  },
  Lurup: {
    lat: 53.59209696973017,
    lon: 9.875334983971587,
  },
  Osdorf: {
    lat: 53.57395734094918,
    lon: 9.859886612800977,
  },
  Nienstedten: {
    lat: 53.55071190261835,
    lon: 9.843064241226953,
  },
  Blankenese: {
    lat: 53.55766035242478,
    lon: 9.801530878004897,
  },
  Iserbrook: {
    lat: 53.577524106192975,
    lon: 9.827958040055078,
  },
  Sülldorf: {
    lat: 53.580479313036996,
    lon: 9.796724093429804,
  },
  Rissen: {
    lat: 53.5838440496248,
    lon: 9.755855384693595,
  },
  Eimsbüttel: {
    lat: 53.57273368226658,
    lon: 9.949836819630502,
  },
  Rotherbaum: {
    lat: 53.56794293817013,
    lon: 9.988116685976728,
  },
  Harvestehude: {
    lat: 53.57518011105077,
    lon: 9.982281174568556,
  },
  "Hoheluft-West": {
    lat: 53.58073541380915,
    lon: 9.9683750069128,
  },
  Lokstedt: {
    lat: 53.60136733364976,
    lon: 9.96082199500033,
  },
  Niendorf: {
    lat: 53.628148464014664,
    lon: 9.95704420327868,
  },
  Schnelsen: {
    lat: 53.63568152588853,
    lon: 9.920654296875002,
  },
  Eidelstedt: {
    lat: 53.604219423919076,
    lon: 9.914645882661196,
  },
  Stellingen: {
    lat: 53.596579685904715,
    lon: 9.92872282495918,
  },
  "Hoheluft-Ost": {
    lat: 53.58333385140146,
    lon: 9.976272316987368,
  },
  Eppendorf: {
    lat: 53.590262941961896,
    lon: 9.986485858558938,
  },
  "Groß Borstel": {
    lat: 53.60453842870196,
    lon: 9.989635036326618,
  },
  Alsterdorf: {
    lat: 53.60890288507576,
    lon: 10.003224394597689,
  },
  Winterhude: {
    lat: 53.59637563810544,
    lon: 10.004425048828127,
  },
  Uhlenhorst: {
    lat: 53.571306969338515,
    lon: 10.013179690379268,
  },
  Hohenfelde: {
    lat: 53.560400399980175,
    lon: 10.021584447339267,
  },
  "Barmbek-Süd": {
    lat: 53.57956277969692,
    lon: 10.042019333748243,
  },
  Dulsberg: {
    lat: 53.58231461787024,
    lon: 10.063132619031775,
  },
  "Barmbek-Nord": {
    lat: 53.59861658768872,
    lon: 10.04819772454294,
  },
  Ohlsdorf: {
    lat: 53.61776174385612,
    lon: 10.035652522289675,
  },
  Fuhlsbüttel: {
    lat: 53.63079538276048,
    lon: 10.023307090905181,
  },
  Langenhorn: {
    lat: 53.66254264507389,
    lon: 10.007856502897658,
  },
  Eilbek: {
    lat: 53.56651561838091,
    lon: 10.04665348153815,
  },
  Wandsbek: {
    lat: 53.572952688187755,
    lon: 10.076181455211,
  },
  Marienthal: {
    lat: 53.5645787878073,
    lon: 10.082358161209674,
  },
  Jenfeld: {
    lat: 53.573147254093726,
    lon: 10.134855950208195,
  },
  Tonndorf: {
    lat: 53.586594388024,
    lon: 10.117721912311104,
  },
  "Farmsen-Berne": {
    lat: 53.609719784645925,
    lon: 10.112400054931642,
  },
  Bramfeld: {
    lat: 53.6168473498556,
    lon: 10.080126918003156,
  },
  Steilshoop: {
    lat: 53.61043205418739,
    lon: 10.057983221090565,
  },
  Wellingsbüttel: {
    lat: 53.642397724752776,
    lon: 10.087509509967353,
  },
  Sasel: {
    lat: 53.651352893949316,
    lon: 10.117034380068525,
  },
  Poppenbüttel: {
    lat: 53.6552192554092,
    lon: 10.074462713278065,
  },
  Hummelsbüttel: {
    lat: 53.63669552215045,
    lon: 10.039447871359501,
  },
  "Lemsahl-Mellingstedt": {
    lat: 53.680034352000185,
    lon: 10.085105895996096,
  },
  Duvenstedt: {
    lat: 53.7040223679261,
    lon: 10.105015600824489,
  },
  "Wohldorf-Ohlstedt": {
    lat: 53.69915901555525,
    lon: 10.13525921623169,
  },
  Bergstedt: {
    lat: 53.672712965718056,
    lon: 10.124588544736165,
  },
  Volksdorf: {
    lat: 53.64728222793602,
    lon: 10.166130952652734,
  },
  Rahlstedt: {
    lat: 53.60360790723741,
    lon: 10.157718215079884,
  },
  Lohbrügge: {
    lat: 53.5031546756516,
    lon: 10.20971254749942,
  },
  Bergedorf: {
    lat: 53.48513343826341,
    lon: 10.226041704280876,
  },
  Curslack: {
    lat: 53.44855067959757,
    lon: 10.22878655717933,
  },
  Altengamme: {
    lat: 53.42922403329351,
    lon: 10.272045401518493,
  },
  Neuengamme: {
    lat: 53.43699663572417,
    lon: 10.225868225097658,
  },
  Kirchwerder: {
    lat: 53.42006934723406,
    lon: 10.200460035798212,
  },
  Ochsenwerder: {
    lat: 53.474713629700915,
    lon: 10.081415132054868,
  },
  Reitbrook: {
    lat: 53.46802175845573,
    lon: 10.15230870920572,
  },
  Allermöhe: {
    lat: 53.482682731691035,
    lon: 10.125188871851384,
  },
  Billwerder: {
    lat: 53.496835500437086,
    lon: 10.131103696447573,
  },
  Moorfleet: {
    lat: 53.508875377830186,
    lon: 10.083045959472658,
  },
  Tatenberg: {
    lat: 53.49269163643943,
    lon: 10.07926892147557,
  },
  Spadenland: {
    lat: 53.48089468215431,
    lon: 10.066136471444743,
  },
  Neuallermöhe: {
    lat: 53.48268169077945,
    lon: 10.163383129192805,
  },
  Harburg: {
    lat: 53.4555528247549,
    lon: 9.987258911132814,
  },
  Neuland: {
    lat: 53.467561049085354,
    lon: 10.030860191491119,
  },
  "Gut Moor": {
    lat: 53.44737505150489,
    lon: 10.016097667767024,
  },
  Wilstorf: {
    lat: 53.44538155640098,
    lon: 9.985113720298486,
  },
  Rönneburg: {
    lat: 53.43326441805828,
    lon: 10.00751442157243,
  },
  Langenbek: {
    lat: 53.4310140364592,
    lon: 9.989661815716245,
  },
  Sinstorf: {
    lat: 53.42375191283032,
    lon: 9.973354250926143,
  },
  Marmstorf: {
    lat: 53.43706037854612,
    lon: 9.969059435583697,
  },
  Eißendorf: {
    lat: 53.45028881072199,
    lon: 9.960136058880305,
  },
  Heimfeld: {
    lat: 53.4624005736363,
    lon: 9.942798525828485,
  },
  Moorburg: {
    lat: 53.484985377910526,
    lon: 9.935783907844456,
  },
  Altenwerder: {
    lat: 53.502647720358475,
    lon: 9.919449741011626,
  },
  Hausbruch: {
    lat: 53.469453840880576,
    lon: 9.884639635676471,
  },
  "Neugraben-Fischbek": {
    lat: 53.4756,
    lon: 9.8483,
  },
  Francop: {
    lat: 53.5006966308197,
    lon: 9.877690182225091,
  },
  Neuenfelde: {
    lat: 53.516211108374996,
    lon: 9.80730156910235,
  },
  Cranz: {
    lat: 53.53602182172877,
    lon: 9.781948712051769,
  },
};

export const createBuecherhalleIcon = (
  size: number = 30,
  desaturated: boolean = false
) =>
  divIcon({
    html: `<svg height="${size}" width="${size}" stroke-linecap="round" stroke-linejoin="round"  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512.427 512.427" fill="#f7887a" xml:space="preserve">
    <g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g transform="translate(1 1)"> <path style="fill:#fbb25e;" d="M33.56,456.682h443.733v-51.2H33.56V456.682z"></path> <path style="fill:#FFFFFF;" d="M7.96,456.682h25.6v-51.2H7.96V456.682z"></path> <g> <path style="fill:#ffe7b0;" d="M477.293,456.682h25.6v-51.2h-25.6V456.682z"></path> <path style="fill:#ffe7b0;" d="M284.44,405.482H59.16l9.387-16.213c8.533-16.213,8.533-36.693,0-52.907l-9.387-16.213h225.28 c21.333,0,39.253,18.773,39.253,42.667C323.693,386.708,306.627,405.482,284.44,405.482"></path> </g> <path style="fill:#FFFFFF;" d="M69.4,336.362l-8.533-16.213h-25.6l10.24,16.213c9.387,16.213,9.387,36.693,0,52.907l-10.24,16.213 h25.6l9.387-16.213C78.787,373.055,78.787,352.575,69.4,336.362"></path> <path style="fill:#9ebf97;" d="M258.84,320.148H33.56l8.533-16.213c8.533-16.213,8.533-36.693,0-52.907l-8.533-16.213h225.28 c21.333,0,39.253,18.773,39.253,42.667C298.093,301.375,280.173,320.148,258.84,320.148"></path> <path style="fill:#FFFFFF;" d="M43.8,251.028l-8.533-16.213h-25.6l10.24,16.213c9.387,16.213,9.387,36.693,0,52.907l-10.24,16.213 h25.6l9.387-16.213C52.333,287.722,52.333,267.242,43.8,251.028"></path> <path style="fill:#          " 500":="" "#ffcb7d",;"="" d="M283.587,234.815H57.453l9.387-16.213c8.533-16.213,8.533-36.693,0-52.907l-9.387-16.213h225.28 c21.333,0,39.253,18.773,39.253,42.667S304.92,234.815,283.587,234.815"></path> <path style="fill:#FFFFFF;" d="M68.547,165.695l-9.387-16.213h-25.6l10.24,16.213c9.387,16.213,9.387,36.693,0,52.907 l-10.24,16.213h25.6l9.387-16.213C77.08,202.388,77.08,181.908,68.547,165.695"></path> <path style="fill:#7896a5;" d="M357.827,58.175l88.747,330.24l-64,17.067L293.827,76.095L357.827,58.175z"></path> <g> <path style="fill:#7896a5;" d="M464.493,385.002L375.747,55.615l-17.92,5.12l88.747,329.387l-64,17.067L464.493,385.002z"></path> <path style="fill:#7896a5;" d="M398.787,135.828l-82.773,22.187l-8.533-33.28l82.773-22.187L398.787,135.828z"></path> <path style="fill:#7896a5;" d="M451.693,333.802l-82.773,22.187l-8.533-33.28l82.773-22.187L451.693,333.802z"></path> </g> <g> <path style="fill:#020101;" d="M502.893,465.215H7.96c-5.12,0-8.533-3.413-8.533-8.533v-51.2c0-5.12,3.413-8.533,8.533-8.533 h494.933c5.12,0,8.533,3.413,8.533,8.533v51.2C511.427,461.802,508.013,465.215,502.893,465.215z M16.493,448.148H494.36v-34.133 H16.493V448.148z"></path> <path style="fill:#020101;" d="M281.027,414.015H33.56c-3.413,0-5.973-1.707-7.68-4.267s-1.707-5.973,0-8.533l10.24-16.213 c7.68-13.653,7.68-29.867,0-43.52l-10.24-16.213c-1.707-2.56-1.707-5.973,0-8.533c1.707-3.413,4.267-5.12,7.68-5.12h247.467 c28.16,0,51.2,23.04,51.2,51.2C332.227,390.975,309.187,414.015,281.027,414.015z M48.92,396.948h232.107 c18.773,0,34.133-15.36,34.133-34.133s-15.36-34.133-34.133-34.133H48.92l1.707,3.413c11.093,18.773,11.093,42.667,0,61.44 L48.92,396.948z"></path> <path style="fill:#020101;" d="M281.027,371.348H93.293c-5.12,0-8.533-3.413-8.533-8.533c0-5.12,3.413-8.533,8.533-8.533h187.733 c5.12,0,8.533,3.413,8.533,8.533C289.56,367.935,286.147,371.348,281.027,371.348z"></path> <path style="fill:#020101;" d="M255.427,328.682H7.96c-3.413,0-5.973-1.707-7.68-4.267s-1.707-5.973,0-8.533l10.24-16.213 c7.68-13.653,7.68-29.867,0-43.52L0.28,239.935c-1.707-2.56-1.707-5.973,0-8.533c1.707-3.413,4.267-5.12,7.68-5.12h247.467 c28.16,0,51.2,23.04,51.2,51.2C306.627,305.642,283.587,328.682,255.427,328.682z M23.32,311.615h232.107 c18.773,0,34.133-15.36,34.133-34.133c0-18.773-15.36-34.133-34.133-34.133H23.32l1.707,3.413 c11.093,18.773,11.093,42.667,0,61.44L23.32,311.615z"></path> <path style="fill:#020101;" d="M255.427,286.015H67.693c-5.12,0-8.533-3.413-8.533-8.533c0-5.12,3.413-8.533,8.533-8.533h187.733 c5.12,0,8.533,3.413,8.533,8.533C263.96,282.602,260.547,286.015,255.427,286.015z"></path> <path style="fill:#020101;" d="M281.027,243.348H33.56c-3.413,0-5.973-1.707-7.68-4.267c-1.707-2.56-1.707-5.973,0-8.533 l10.24-16.213c7.68-13.653,7.68-29.867,0-43.52l-10.24-16.213c-1.707-2.56-1.707-5.973,0-8.533c1.707-3.413,4.267-5.12,7.68-5.12 h247.467c28.16,0,51.2,23.04,51.2,51.2S309.187,243.348,281.027,243.348z M48.92,226.282h232.107 c18.773,0,34.133-15.36,34.133-34.133s-15.36-34.133-34.133-34.133H48.92l1.707,3.413c11.093,18.773,11.093,42.667,0,61.44 L48.92,226.282z"></path> <path style="fill:#020101;" d="M382.573,414.015c-3.413,0-6.827-2.56-8.533-5.973l-88.747-330.24 c-0.853-4.267,1.707-9.387,5.973-10.24l82.773-22.187c4.267-0.853,9.387,1.707,10.24,5.973l88.747,329.387 c0.853,2.56,0,4.267-0.853,6.827c-0.853,2.56-3.413,3.413-5.12,4.267l-82.773,22.187 C383.427,414.015,382.573,414.015,382.573,414.015z M304.067,82.068l83.627,313.173l65.707-17.92L370.627,64.148L304.067,82.068z"></path> <path style="fill:#020101;" d="M281.027,200.682H93.293c-5.12,0-8.533-3.413-8.533-8.533c0-5.12,3.413-8.533,8.533-8.533h187.733 c5.12,0,8.533,3.413,8.533,8.533C289.56,197.268,286.147,200.682,281.027,200.682z"></path> <path style="fill:#020101;" d="M316.013,166.548c-3.413,0-6.827-2.56-8.533-5.973l-8.533-33.28c-0.853-2.56,0-4.267,0.853-6.827 c0.853-1.707,3.413-3.413,5.12-4.267l82.773-22.187c2.56-0.853,4.267,0,6.827,0.853c1.707,0.853,3.413,3.413,4.267,5.12 l8.533,33.28c0.853,4.267-1.707,9.387-5.973,10.24l-83.627,23.04C317.72,166.548,316.867,166.548,316.013,166.548z M317.72,131.562l4.267,16.213l65.707-17.92l-4.267-16.213L317.72,131.562z"></path> <path style="fill:#020101;" d="M368.92,364.522c-3.413,0-6.827-2.56-8.533-5.973l-8.533-33.28c-0.853-2.56,0-4.267,0.853-6.827 c0.853-2.56,3.413-3.413,5.12-4.267l82.773-22.187c2.56-0.853,4.267,0,6.827,0.853c1.707,0.853,3.413,3.413,4.267,5.12 l8.533,33.28c0.853,4.267-1.707,9.387-5.973,10.24l-82.773,22.187C370.627,364.522,369.773,364.522,368.92,364.522z M370.627,328.682l4.267,17.067l65.707-17.92l-4.267-16.213L370.627,328.682z"></path> <path style="fill:#020101;" d="M392.813,287.722c-3.413,0-6.827-2.56-8.533-5.973l-26.453-98.987 c-0.853-4.267,1.707-9.387,5.973-10.24s9.387,1.707,10.24,5.973l26.453,98.133c0.853,4.267-1.707,9.387-5.973,10.24 C393.667,287.722,392.813,287.722,392.813,287.722z"></path> </g> </g> </g></svg>
   `,
    iconSize: [size, size],
    iconAnchor: [size / 2, size],
    className: desaturated ? "bg-transparent grayscale" : "bg-transparent",
  });

export const createMarktIcon = (
  size: number = 30,
  desaturated: boolean = false
) =>
  divIcon({
    html: `<svg height=${size} width=${size} version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 503.467 503.467" xml:space="preserve" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g transform="translate(1 1)"> <path style="fill:#fbb0a6;" d="M498.2,37.4v152.747c-5.973-0.853-11.947-4.267-17.067-7.68c-10.24-7.68-17.067-20.48-17.067-34.133 V3.267C482.84,3.267,498.2,18.627,498.2,37.4z M208.067,3.267v145.067c0,23.893-18.773,42.667-42.667,42.667 c-23.893,0-42.667-18.773-42.667-42.667V3.267H208.067z M378.733,3.267v145.067c0,23.893-18.773,42.667-42.667,42.667 S293.4,172.227,293.4,148.333V3.267H378.733z M37.4,3.267v145.067c0,13.653-6.827,26.453-17.067,34.133 c-5.12,3.413-11.093,6.827-17.067,7.68V37.4C3.267,18.627,18.627,3.267,37.4,3.267z"></path> <path style="fill:#f0ffff;" d="M481.133,182.467V344.6h-460.8V182.467c10.24-7.68,17.067-20.48,17.067-34.133 C37.4,172.227,56.173,191,80.067,191s42.667-18.773,42.667-42.667c0,23.893,18.773,42.667,42.667,42.667 c23.893,0,42.667-18.773,42.667-42.667c0,23.893,18.773,42.667,42.667,42.667s42.667-18.773,42.667-42.667 c0,23.893,18.773,42.667,42.667,42.667s42.667-18.773,42.667-42.667c0,23.893,18.773,42.667,42.667,42.667 s42.667-18.773,42.667-42.667C464.067,161.987,470.893,174.787,481.133,182.467"></path> <path style="fill:#85ab7d;" d="M122.733,3.267v145.067c0,23.893-18.773,42.667-42.667,42.667S37.4,172.227,37.4,148.333V3.267 H122.733z M293.4,3.267v145.067c0,23.893-18.773,42.667-42.667,42.667s-42.667-18.773-42.667-42.667V3.267H293.4z M464.067,3.267 v145.067c0,23.893-18.773,42.667-42.667,42.667s-42.667-18.773-42.667-42.667V3.267H464.067z"></path> <polygon style="fill:#ffcb7d;" points="481.133,344.6 481.133,481.133 429.933,481.133 71.533,481.133 20.333,481.133 20.333,344.6 "></polygon> <path style="fill:#7896a5;" d="M165.4,250.733l-12.8,93.013v0.853H93.72v-0.853l-13.653-93.013c0,0,8.533-17.067,42.667-17.067 S165.4,250.733,165.4,250.733"></path> <path style="fill:#85ab7d;" d="M429.933,310.467c0-9.387-7.68-17.067-17.067-17.067s-17.067,7.68-17.067,17.067H429.933z M361.667,310.467c0-9.387-7.68-17.067-17.067-17.067s-17.067,7.68-17.067,17.067H361.667z M293.4,310.467 c0-9.387-7.68-17.067-17.067-17.067s-17.067,7.68-17.067,17.067H293.4z M395.8,259.267c0-9.387-7.68-17.067-17.067-17.067 c-9.387,0-17.067,7.68-17.067,17.067H395.8z M327.533,259.267c0-9.387-7.68-17.067-17.067-17.067s-17.067,7.68-17.067,17.067 H327.533z"></path> </g> <path style="fill:#343b3e;" d="M430.933,503.467c-2.56,0-4.267-1.707-4.267-4.267v-17.067c0-2.56,1.707-4.267,4.267-4.267h46.933 v-128h-422.4c-2.56,0-4.267-1.707-4.267-4.267c0-2.56,1.707-4.267,4.267-4.267h426.667c2.56,0,4.267,1.707,4.267,4.267v136.533 c0,2.56-1.707,4.267-4.267,4.267H435.2v12.8C435.2,501.76,433.493,503.467,430.933,503.467z M72.533,503.467 c-2.56,0-4.267-1.707-4.267-4.267v-12.8H21.333c-2.56,0-4.267-1.707-4.267-4.267V221.867c0-2.56,1.707-4.267,4.267-4.267 s4.267,1.707,4.267,4.267v256h46.933c2.56,0,4.267,1.707,4.267,4.267V499.2C76.8,501.76,75.093,503.467,72.533,503.467z M396.8,486.4H106.667c-2.56,0-4.267-1.707-4.267-4.267s1.707-4.267,4.267-4.267H396.8c2.56,0,4.267,1.707,4.267,4.267 S399.36,486.4,396.8,486.4z M157.867,315.733L157.867,315.733c-2.56,0-4.267-2.56-4.267-5.12l8.533-58.027 c-2.56-3.413-11.947-13.653-38.4-13.653s-35.84,10.24-38.4,13.653l8.533,58.027c0,2.56-1.707,4.267-3.413,5.12 c-2.56,0-4.267-1.707-5.12-3.413L76.8,252.587c0-0.853,0-1.707,0-2.56c0-0.853,10.24-19.627,46.08-19.627s46.08,18.773,46.08,19.627 c0,0.853,0.853,1.707,0,2.56l-8.533,59.733C162.133,314.027,159.573,315.733,157.867,315.733z M482.133,315.733 c-2.56,0-4.267-1.707-4.267-4.267v-89.6c0-2.56,1.707-4.267,4.267-4.267s4.267,1.707,4.267,4.267v89.6 C486.4,314.027,484.693,315.733,482.133,315.733z M430.933,315.733c-2.56,0-4.267-1.707-4.267-4.267c0-6.827-5.973-12.8-12.8-12.8 s-12.8,5.973-12.8,12.8c0,2.56-1.707,4.267-4.267,4.267s-4.267-1.707-4.267-4.267c0-11.947,9.387-21.333,21.333-21.333 c11.947,0,21.333,9.387,21.333,21.333C435.2,314.027,433.493,315.733,430.933,315.733z M362.667,315.733 c-2.56,0-4.267-1.707-4.267-4.267c0-6.827-5.973-12.8-12.8-12.8s-12.8,5.973-12.8,12.8c0,2.56-1.707,4.267-4.267,4.267 s-4.267-1.707-4.267-4.267c0-11.947,9.387-21.333,21.333-21.333c11.947,0,21.333,9.387,21.333,21.333 C366.933,314.027,365.227,315.733,362.667,315.733z M294.4,315.733c-2.56,0-4.267-1.707-4.267-4.267c0-6.827-5.973-12.8-12.8-12.8 s-12.8,5.973-12.8,12.8c0,2.56-1.707,4.267-4.267,4.267S256,314.027,256,311.467c0-11.947,9.387-21.333,21.333-21.333 s21.333,9.387,21.333,21.333C298.667,314.027,296.96,315.733,294.4,315.733z M123.733,315.733c-2.56,0-4.267-1.707-4.267-4.267 v-34.133c0-2.56,1.707-4.267,4.267-4.267c2.56,0,4.267,1.707,4.267,4.267v34.133C128,314.027,126.293,315.733,123.733,315.733z M396.8,264.533c-2.56,0-4.267-1.707-4.267-4.267c0-6.827-5.973-12.8-12.8-12.8c-6.827,0-12.8,5.973-12.8,12.8 c0,2.56-1.707,4.267-4.267,4.267s-4.267-1.707-4.267-4.267c0-11.947,9.387-21.333,21.333-21.333 c11.947,0,21.333,9.387,21.333,21.333C401.067,262.827,399.36,264.533,396.8,264.533z M328.533,264.533 c-2.56,0-4.267-1.707-4.267-4.267c0-6.827-5.973-12.8-12.8-12.8s-12.8,5.973-12.8,12.8c0,2.56-1.707,4.267-4.267,4.267 s-4.267-1.707-4.267-4.267c0-11.947,9.387-21.333,21.333-21.333c11.947,0,21.333,9.387,21.333,21.333 C332.8,262.827,331.093,264.533,328.533,264.533z M422.4,196.267c-18.773,0-34.987-11.093-42.667-27.307 c-7.68,16.213-23.893,27.307-42.667,27.307S302.08,185.173,294.4,168.96c-7.68,16.213-23.893,27.307-42.667,27.307 s-34.987-11.093-42.667-27.307c-7.68,16.213-23.893,27.307-42.667,27.307c-18.773,0-34.987-11.093-42.667-27.307 c-7.68,16.213-23.893,27.307-42.667,27.307S46.08,185.173,38.4,168.96C32.427,182.613,20.48,192,5.12,195.413 c-0.853,0-2.56,0-3.413-0.853S0,192.853,0,191.147V38.4C0,17.067,17.067,0,38.4,0h426.667c21.333,0,38.4,17.067,38.4,38.4v152.747 c0,0.853-0.853,2.56-1.707,3.413c-0.853,0.853-2.56,0.853-3.413,0.853c-15.36-3.413-27.307-12.8-33.28-26.453 C457.387,185.173,441.173,196.267,422.4,196.267z M384,149.333c0,21.333,17.067,38.4,38.4,38.4s38.4-17.067,38.4-38.4V38.4 c0-2.56,1.707-4.267,4.267-4.267s4.267,1.707,4.267,4.267v110.933c0,16.213,10.24,30.72,25.6,35.84V38.4 c0-16.213-13.653-29.867-29.867-29.867H38.4C22.187,8.533,8.533,22.187,8.533,38.4v146.773c15.36-5.12,25.6-19.627,25.6-35.84V38.4 c0-2.56,1.707-4.267,4.267-4.267s4.267,1.707,4.267,4.267v110.933c0,21.333,17.067,38.4,38.4,38.4s38.4-17.067,38.4-38.4V38.4 c0-2.56,1.707-4.267,4.267-4.267c2.56,0,4.267,1.707,4.267,4.267v110.933c0,21.333,17.067,38.4,38.4,38.4s38.4-17.067,38.4-38.4 V38.4c0-2.56,1.707-4.267,4.267-4.267s4.267,1.707,4.267,4.267v110.933c0,21.333,17.067,38.4,38.4,38.4s38.4-17.067,38.4-38.4V38.4 c0-2.56,1.707-4.267,4.267-4.267s4.267,1.707,4.267,4.267v110.933c0,21.333,17.067,38.4,38.4,38.4s38.4-17.067,38.4-38.4V38.4 c0-2.56,1.707-4.267,4.267-4.267c2.56,0,4.267,1.707,4.267,4.267V149.333z"></path> </g></svg>
`,
    iconSize: [size, size],
    iconAnchor: [size / 2, size],
    className: desaturated ? "bg-transparent grayscale" : "bg-transparent",
  });

export const fetchLocationData = async (lat: number, lon: number) => {
  let nearestStadtteil = "";
  let minDistance = Infinity;

  Object.entries(locations).forEach(([stadtteil, coordinates]) => {
    const distance = haversineDistance(
      lat,
      lon,
      coordinates.lat,
      coordinates.lon
    );
    if (distance < minDistance) {
      minDistance = distance;
      nearestStadtteil = stadtteil;
    }
  });
  return nearestStadtteil;
};

export const flohmarktIcon = createNormalSizeIcon("#7B3E5E", 25, "#361b29");
export const futureIcon = createNormalSizeIcon("#343b3e", 25, "#1b1d1e");
export const eventIcon = createNormalSizeIcon("#de6c13", 25, "#602d07");
export const todayIcon = divIcon({
  html: createStandortMapIcon("#b72f1e", 30, "#460B07"),
  iconSize: [30, 30],
  iconAnchor: [30 / 2, 50],
  className: "bg-transparent",
});
export const weihnachtsmarktIcon = divIcon({
  html: createWeihnachtsmarktMapIcon(),
  iconSize: [20, 25],
  iconAnchor: [10, 20],
  className: "bg-transparent",
});
export const smallWeihnachtsmarktIcon = divIcon({
  html: createWeihnachtsmarktMapIcon(15),
  iconSize: [15, 15],
  iconAnchor: [8, 15],
  className: "bg-transparent",
});
